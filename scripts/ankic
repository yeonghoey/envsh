#!/usr/bin/env python3

import sys

import click
import clipboard


@click.command()
@click.option('-n', '--no-hint', is_flag=True)
@click.option('-d', '--delim', default='\n')
@click.argument('cloze', default=1, type=click.INT)
def main(no_hint, delim, cloze):
    trie = {}
    for line in sys.stdin:
        for term in parse(line):
            add(trie, term)

    lines = []
    for p, r in traverse(trie):
        prefix = '' if no_hint else p
        rest = p+r if no_hint else r
        line = format_line(prefix, cloze, rest)
        lines.append(line)
    content = delim.join(lines)

    clipboard.copy(content)
    print(content)


def parse(line):
    for term in line.split(','):
        t = term.strip()
        if t:
            yield t


def add(trie, term, n=0):
    if n >= len(term):
        trie[''] = term
        return

    c = term[n]
    if c in trie:
        node = trie[c]
        if node == term:
            return
        if is_leaf(node):
            trie[c] = {}
            add(trie[c], node, n+1)

        add(trie[c], term, n+1)
    else:
        trie[c] = term


def is_leaf(node):
    return isinstance(node, str)


def traverse(trie, pre=''):
    for c, node in trie.items():
        prefix = pre + c
        if is_leaf(node):
            rest = node[len(prefix):]
            yield prefix, rest
        else:
            yield from traverse(node, prefix)


def format_line(prefix, cloze, term):
    return '%s{{c%d::%s}}' % (prefix, cloze, term)


if __name__ == '__main__':
    main()
