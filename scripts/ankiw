#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from io import BytesIO
import os
import re
import sys
import webbrowser

import click
import clipboard
import requests


LOOKUPS = [
    'https://www.vocabulary.com/dictionary/%s',
    'http://www.thesaurus.com/browse/%s',
    'http://endic.naver.com/search.nhn?sLn=kr&query=%s',
    'http://www.google.com/search?tbm=isch&q=%s',
]


@click.command()
@click.option('--anki-media', envvar='ANKI_MEDIA')
@click.option('-q', '--quiet', '--no-lookup', is_flag=True)
@click.argument('word')
def main(anki_media, no_lookup, word):
    filename = f'{word}.mp3'
    filepath = os.path.join(anki_media, filename)
    bytes_ = voice_of(word)

    if not no_lookup:
        lookup(word)

    save(filepath, bytes_)
    clip(filename)
    play(filepath)


def lookup(word):
    for l in LOOKUPS:
        webbrowser.open_new_tab(l % word)


def voice_of(word):
    page_source = fetch_endic_naver(word)
    voice_url = extract_voice_url(page_source)
    return  make_request(voice_url)


def voice_of(word):
    url = 'http://endic.naver.com/search.nhn?sLn=en&query={}'.format(word)
    page_source = make_request(url).decode('utf-8')

    mo = re.search(r'playlist="([^"]+)"', page_source)
    if mo:
        voice_url = mo.group(1)
        return  make_request(voice_url)
    else:
        errexit(f"Unable to find voice for '{word}'")


def make_request(url):
    response = requests.get(url)
    return response.content


def save(filepath, bytes_):
    with open(filepath, 'wb') as f:
        f.write(bytes_)


def clip(filename):
    anki_sound_field = f'[sound:{filename}]'
    clipboard.copy(anki_sound_field)
    print(f"Copied '{anki_sound_field}' to clipboard")


def play(filepath):
    cmd = f"( afplay '{filepath}' & )"
    os.system(cmd)


def errexit(message):
    print(message, file=sys.stderr)
    sys.exit(1)


if __name__ == '__main__':
    main()
