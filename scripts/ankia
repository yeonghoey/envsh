#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from datetime import datetime
import os
import sys

import click
import clipboard


SRCPATH_TYPE = click.Path(exists=True,
                          file_okay=True,
                          dir_okay=False,
                          resolve_path=True)

@click.command()
@click.option('--anki-media', envvar='ANKI_MEDIA')
@click.option('-n', '--no-anki', is_flag=True)
@click.argument('srcpath', type=SRCPATH_TYPE)
@click.argument('ss')
@click.argument('to')
def main(anki_media, no_anki, srcpath, ss, to):
    now = datetime.now().strftime('%Y%m%d-%H%M%S')
    dstname = '%s.mp3' % now
    dstpath = (dstname if no_anki else
               os.path.join(anki_media, dstname))
    do_ffmpeg(srcpath, ss, to, dstpath)
    clip(dstname)
    play(dstpath)


def do_ffmpeg(srcpath, ss, to, dstpath):
    cmd = ' '.join([
        'ffmpeg',
        '-y',                            # Overwrite output without asking
        '-loglevel 0',                   # Panic, only show fatal errors
        "-i '%s'" % srcpath,             # Input
        '-vn',                           # Disable video
        '-codec:a libmp3lame',           # Encode mp3
        '-qscale:a 3',                   # Just audible is enough
        "-ss '%s' -to '%s'" % (ss, to),  # Specify range
        "'%s'" % dstpath                 # Output
    ])
    os.system(cmd)


def clip(filename):
    anki_sound_field = '[sound:%s]' % filename
    clipboard.copy(anki_sound_field)
    print("Copied '%s' to clipboard" % anki_sound_field)


def play(dstpath):
    cmd = "afplay '%s'" % dstpath
    os.system(cmd)


def errexit(message):
    print(message, file=sys.stderr)
    sys.exit(1)


if __name__ == '__main__':
    main()
